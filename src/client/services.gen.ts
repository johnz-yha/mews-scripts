// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { AccountNotesGetAllData, AccountNotesGetAllResponse, AccountNotesAddData, AccountNotesAddResponse, AccountNotesUpdateData, AccountNotesUpdateResponse, AccountNotesDeleteData, AccountNotesDeleteResponse, AccountingCategoriesGetAllData, AccountingCategoriesGetAllResponse, AccountingItemsUpdateData, AccountingItemsUpdateResponse, AccountingItemsGetAllData, AccountingItemsGetAllResponse, AccountsUpdateData, AccountsUpdateResponse, AccountsMergeData, AccountsMergeResponse, AddressesGetAllData, AddressesGetAllResponse, AddressesAddData, AddressesAddResponse, AddressesUpdateData, AddressesUpdateResponse, AddressesDeleteData, AddressesDeleteResponse, AgeCategoriesGetAllData, AgeCategoriesGetAllResponse, AvailabilityAdjustmentsGetAllData, AvailabilityAdjustmentsGetAllResponse, AvailabilityBlocksDeleteData, AvailabilityBlocksDeleteResponse, AvailabilityBlocksGetAllData, AvailabilityBlocksGetAllResponse, AvailabilityBlocksAddData, AvailabilityBlocksAddResponse, AvailabilityBlocksUpdateData, AvailabilityBlocksUpdateResponse, BillsGetAllData, BillsGetAllResponse, BillsGetAllByIdsData, BillsGetAllByIdsResponse, BillsGetAllByCustomersData, BillsGetAllByCustomersResponse, BillsGetAllClosedData, BillsGetAllClosedResponse, BillsGetPdfData, BillsGetPdfResponse, BillsAddData, BillsAddResponse, BillsDeleteData, BillsDeleteResponse, BillsCloseData, BillsCloseResponse, BusinessSegmentsGetAllData, BusinessSegmentsGetAllResponse, CancellationPoliciesGetAllData, CancellationPoliciesGetAllResponse, CashierTransactionsGetAllData, CashierTransactionsGetAllResponse, CashiersGetAllData, CashiersGetAllResponse, CommandsGetAllByIdsData, CommandsGetAllByIdsResponse, CommandsGetAllActiveData, CommandsGetAllActiveResponse, CommandsAddPrinterData, CommandsAddPrinterResponse, CommandsAddKeyCutterData, CommandsAddKeyCutterResponse, CommandsAddPaymentTerminalData, CommandsAddPaymentTerminalResponse, CommandsUpdateData, CommandsUpdateResponse, CompaniesAddData, CompaniesAddResponse, CompaniesUpdateData, CompaniesUpdateResponse, CompaniesGetAllData, CompaniesGetAllResponse, CompaniesDeleteData, CompaniesDeleteResponse, CompaniesGetAllByNameData, CompaniesGetAllByNameResponse, CompanionshipsGetAllData, CompanionshipsGetAllResponse, CompanyContractsGetAllData, CompanyContractsGetAllResponse, CompanyContractsAddData, CompanyContractsAddResponse, CompanyContractsUpdateData, CompanyContractsUpdateResponse, CompanyContractsDeleteData, CompanyContractsDeleteResponse, ConfigurationGetData, ConfigurationGetResponse, CountersGetAllData, CountersGetAllResponse, CountriesGetAllData, CountriesGetAllResponse, CreditCardsGetAllData, CreditCardsGetAllResponse, CreditCardsGetAllByIdsData, CreditCardsGetAllByIdsResponse, CreditCardsGetAllByCustomersData, CreditCardsGetAllByCustomersResponse, CreditCardsAddTokenizedData, CreditCardsAddTokenizedResponse, CreditCardsChargeData, CreditCardsChargeResponse, CulturesGetAllData, CulturesGetAllResponse, CurrenciesGetAllData, CurrenciesGetAllResponse, CustomersGetAllData, CustomersGetAllResponse, CustomersGetAllByIdsData, CustomersGetAllByIdsResponse, CustomersGetAllByEmailsData, CustomersGetAllByEmailsResponse, CustomersSearchData, CustomersSearchResponse, CustomersGetAllByNameData, CustomersGetAllByNameResponse, CustomersGetOpenItemsData, CustomersGetOpenItemsResponse, CustomersAddData, CustomersAddResponse, CustomersUpdateData, CustomersUpdateResponse, CustomersMergeData, CustomersMergeResponse, CustomersAddFileData, CustomersAddFileResponse, DepartmentsGetAllData, DepartmentsGetAllResponse, DevicesGetAllData, DevicesGetAllResponse, EnterprisesGetAllData, EnterprisesGetAllResponse, ExchangeRatesGetAllData, ExchangeRatesGetAllResponse, ExportsAddData, ExportsAddResponse, ExportsGetAllData, ExportsGetAllResponse, ImagesGetUrlsData, ImagesGetUrlsResponse, LanguagesGetAllData, LanguagesGetAllResponse, LanguagesGetTextsData, LanguagesGetTextsResponse, LoyaltyMembershipsGetAllData, LoyaltyMembershipsGetAllResponse, LoyaltyMembershipsAddData, LoyaltyMembershipsAddResponse, LoyaltyMembershipsUpdateData, LoyaltyMembershipsUpdateResponse, LoyaltyMembershipsDeleteData, LoyaltyMembershipsDeleteResponse, LoyaltyProgramsGetAllData, LoyaltyProgramsGetAllResponse, LoyaltyProgramsAddData, LoyaltyProgramsAddResponse, LoyaltyProgramsUpdateData, LoyaltyProgramsUpdateResponse, LoyaltyProgramsDeleteData, LoyaltyProgramsDeleteResponse, LoyaltyTiersGetAllData, LoyaltyTiersGetAllResponse, LoyaltyTiersAddData, LoyaltyTiersAddResponse, LoyaltyTiersUpdateData, LoyaltyTiersUpdateResponse, LoyaltyTiersDeleteData, LoyaltyTiersDeleteResponse, MessageThreadsGetAllData, MessageThreadsGetAllResponse, MessageThreadsAddData, MessageThreadsAddResponse, MessagesGetAllData, MessagesGetAllResponse, MessagesAddData, MessagesAddResponse, OrderItemsGetAllData, OrderItemsGetAllResponse, OutletBillsAddData, OutletBillsAddResponse, OutletItemsGetAllData, OutletItemsGetAllResponse, OutletsGetAllData, OutletsGetAllResponse, PaymentRequestsGetAllData, PaymentRequestsGetAllResponse, PaymentRequestsAddData, PaymentRequestsAddResponse, PaymentRequestsCancelData, PaymentRequestsCancelResponse, PaymentsGetAllData, PaymentsGetAllResponse, PaymentsRefundData, PaymentsRefundResponse, PaymentsAddCreditCardData, PaymentsAddCreditCardResponse, PaymentsAddExternalData, PaymentsAddExternalResponse, PaymentsAddAlternativeData, PaymentsAddAlternativeResponse, PreauthorizationsGetAllByCustomersData, PreauthorizationsGetAllByCustomersResponse, ProductCategoriesGetAllData, ProductCategoriesGetAllResponse, ProductsGetPricingData, ProductsGetPricingResponse, ProductsGetAllData, ProductsGetAllResponse, ProductsDeleteData, ProductsDeleteResponse, RateGroupsGetAllData, RateGroupsGetAllResponse, RatesGetAllData, RatesGetAllResponse, RatesAddData, RatesAddResponse, RatesGetPricingData, RatesGetPricingResponse, RatesUpdatePriceData, RatesUpdatePriceResponse, ReservationGroupsGetAllData, ReservationGroupsGetAllResponse, ServiceOrdersReservationsGetAllData, ServiceOrdersReservationsGetAllResponse, ReservationsGetAll20230606Data, ReservationsGetAll20230606Response, ReservationsGetAllData, ReservationsGetAllResponse, ReservationsGetAllByIdsData, ReservationsGetAllByIdsResponse, ReservationsGetAllByCustomersData, ReservationsGetAllByCustomersResponse, ReservationsGetAllByNumbersData, ReservationsGetAllByNumbersResponse, ReservationsPriceData, ReservationsPriceResponse, ReservationsAddData, ReservationsAddResponse, ReservationsUpdateData, ReservationsUpdateResponse, ReservationsConfirmData, ReservationsConfirmResponse, ReservationsStartData, ReservationsStartResponse, ReservationsProcessData, ReservationsProcessResponse, ReservationsCancelData, ReservationsCancelResponse, ReservationsUpdateCustomerData, ReservationsUpdateCustomerResponse, ReservationsUpdateIntervalData, ReservationsUpdateIntervalResponse, ReservationsAddCompanionData, ReservationsAddCompanionResponse, ReservationsDeleteCompanionData, ReservationsDeleteCompanionResponse, ReservationsAddProductData, ReservationsAddProductResponse, ReservationsGetAllItemsData, ReservationsGetAllItemsResponse, ResourceAccessTokensGetAllData, ResourceAccessTokensGetAllResponse, ResourceAccessTokensAddData, ResourceAccessTokensAddResponse, ResourceAccessTokensUpdateData, ResourceAccessTokensUpdateResponse, ResourceAccessTokensDeleteData, ResourceAccessTokensDeleteResponse, ResourceBlocksGetAllData, ResourceBlocksGetAllResponse, ResourceBlocksAddData, ResourceBlocksAddResponse, ResourceBlocksDeleteData, ResourceBlocksDeleteResponse, ResourceCategoriesGetAllData, ResourceCategoriesGetAllResponse, ResourceCategoryAssignmentsGetAllData, ResourceCategoryAssignmentsGetAllResponse, ResourceCategoryImageAssignmentsGetAllData, ResourceCategoryImageAssignmentsGetAllResponse, ResourceFeatureAssignmentsGetAllData, ResourceFeatureAssignmentsGetAllResponse, ResourceFeaturesGetAllData, ResourceFeaturesGetAllResponse, ResourcesGetAllData, ResourcesGetAllResponse, ResourcesUpdateData, ResourcesUpdateResponse, RestrictionsAddData, RestrictionsAddResponse, RestrictionsDeleteData, RestrictionsDeleteResponse, RestrictionsSetData, RestrictionsSetResponse, RestrictionsClearData, RestrictionsClearResponse, RestrictionsGetAllData, RestrictionsGetAllResponse, RoutingRulesGetAllData, RoutingRulesGetAllResponse, RoutingRulesAddData, RoutingRulesAddResponse, RoutingRulesUpdateData, RoutingRulesUpdateResponse, RoutingRulesDeleteData, RoutingRulesDeleteResponse, RulesGetAllData, RulesGetAllResponse, ServiceOrderNotesAddData, ServiceOrderNotesAddResponse, ServiceOrderNotesUpdateData, ServiceOrderNotesUpdateResponse, ServiceOrderNotesGetAllData, ServiceOrderNotesGetAllResponse, ServiceOrderNotesDeleteData, ServiceOrderNotesDeleteResponse, ProductServiceOrdersGetAllData, ProductServiceOrdersGetAllResponse, CustomersChargeData, CustomersChargeResponse, OrdersAddData, OrdersAddResponse, ServicesGetAllData, ServicesGetAllResponse, ServicesUpdateAvailabilityData, ServicesUpdateAvailabilityResponse, ServicesGetAvailabilityData, ServicesGetAvailabilityResponse, ServicesGetAvailability20240122Data, ServicesGetAvailability20240122Response, SourceAssignmentsGetAllData, SourceAssignmentsGetAllResponse, SourcesGetAllData, SourcesGetAllResponse, TasksGetAllData, TasksGetAllResponse, TasksAddData, TasksAddResponse, TaxEnvironmentsGetAllData, TaxEnvironmentsGetAllResponse, TaxationsGetAllData, TaxationsGetAllResponse, VoucherCodesAddData, VoucherCodesAddResponse, VoucherCodesDeleteData, VoucherCodesDeleteResponse, VoucherCodesGetAllData, VoucherCodesGetAllResponse, VouchersGetAllData, VouchersGetAllResponse, VouchersAddData, VouchersAddResponse, VouchersUpdateData, VouchersUpdateResponse, VouchersDeleteData, VouchersDeleteResponse } from './types.gen';

export class AccountNotesService {
    /**
     * Get all account notes
     * Returns all account notes of an account, optionally filtered by activity state, account identifiers, specific account note identifiers or other filter parameters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountNoteResult Success
     * @throws ApiError
     */
    public static accountNotesGetAll(data: AccountNotesGetAllData = {}): CancelablePromise<AccountNotesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountNotes/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add account notes
     * Adds account notes to an account of the enterprise chain. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountNoteAdditionResult Success
     * @throws ApiError
     */
    public static accountNotesAdd(data: AccountNotesAddData = {}): CancelablePromise<AccountNotesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountNotes/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update account notes
     * Updates information about the specified account notes.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountNoteUpdateResult Success
     * @throws ApiError
     */
    public static accountNotesUpdate(data: AccountNotesUpdateData = {}): CancelablePromise<AccountNotesUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountNotes/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete account notes
     * Deletes specified account notes.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static accountNotesDelete(data: AccountNotesDeleteData = {}): CancelablePromise<AccountNotesDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountNotes/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AccountingCategoriesService {
    /**
     * Get all accounting categories
     * Returns all accounting categories of the enterprise associated with the connector integration.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountingCategoryResult Success
     * @throws ApiError
     */
    public static accountingCategoriesGetAll(data: AccountingCategoriesGetAllData = {}): CancelablePromise<AccountingCategoriesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountingCategories/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AccountingItemsService {
    /**
     * Update accounting items
     * Updates specified accounting items. You can use this operation to assign an accounting item to a different account or bill. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountingItemResult Success
     * @throws ApiError
     */
    public static accountingItemsUpdate(data: AccountingItemsUpdateData = {}): CancelablePromise<AccountingItemsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountingItems/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * Get all accounting items
     * Use payments/getall or orderItems/getall.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountingItemResult Success
     * @throws ApiError
     */
    public static accountingItemsGetAll(data: AccountingItemsGetAllData = {}): CancelablePromise<AccountingItemsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accountingItems/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AccountsService {
    /**
     * Update accounts
     * Updates one or more existing accounts in the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AccountResult Success
     * @throws ApiError
     */
    public static accountsUpdate(data: AccountsUpdateData = {}): CancelablePromise<AccountsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accounts/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Merge accounts
     * Merges two or more accounts of the same account type together. The given source accounts will be merged into the given target account and the merged account will keep the target account ID.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static accountsMerge(data: AccountsMergeData = {}): CancelablePromise<AccountsMergeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/accounts/merge',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AddressesService {
    /**
     * Get all addresses
     * Returns all addresses associated with the specified accounts within the enterprise.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddressResult Success
     * @throws ApiError
     */
    public static addressesGetAll(data: AddressesGetAllData = {}): CancelablePromise<AddressesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/addresses/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add addresses
     * Adds one or more new addresses to the system and assigns them to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddressResult Success
     * @throws ApiError
     */
    public static addressesAdd(data: AddressesAddData = {}): CancelablePromise<AddressesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/addresses/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update addresses
     * Updates one or more existing addresses in the system, assigned to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddressResult Success
     * @throws ApiError
     */
    public static addressesUpdate(data: AddressesUpdateData = {}): CancelablePromise<AddressesUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/addresses/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete addresses
     * Deletes one or more addresses in the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static addressesDelete(data: AddressesDeleteData = {}): CancelablePromise<AddressesDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/addresses/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AgeCategoriesService {
    /**
     * Get all age categories
     * Returns all age categories filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AgeCategoryResult Success
     * @throws ApiError
     */
    public static ageCategoriesGetAll(data: AgeCategoriesGetAllData = {}): CancelablePromise<AgeCategoriesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/ageCategories/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AvailabilityAdjumentsService {
    /**
     * Get all availability adjustments
     * Returns all availability adjustments.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AvailabilityAdjustmentResult Success
     * @throws ApiError
     */
    public static availabilityAdjustmentsGetAll(data: AvailabilityAdjustmentsGetAllData = {}): CancelablePromise<AvailabilityAdjustmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/availabilityAdjustments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class AvailabilityBlocksService {
    /**
     * Delete availability blocks
     * Delete availability blocks. Note that an availability block containing active reservations (reservations which are not `Canceled`) cannot be deleted.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static availabilityBlocksDelete(data: AvailabilityBlocksDeleteData = {}): CancelablePromise<AvailabilityBlocksDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/availabilityBlocks/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all availability blocks
     * > This feature is being actively developed, features and behavior of this operation may change at short notice.
     * Returns all availability blocks filtered by services, unique identifiers and other filters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AvailabilityBlockResult Success
     * @throws ApiError
     */
    public static availabilityBlocksGetAll(data: AvailabilityBlocksGetAllData = {}): CancelablePromise<AvailabilityBlocksGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/availabilityBlocks/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add availability blocks
     * > This feature is being actively developed, features and behavior of this operation might change on short notice.
     * Adds availability blocks which are used to group related [Availability updates](https://mews-systems.gitbook.io/connector-api/operations/#availability-update). This makes limiting public availability easier and more organized. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AvailabilityBlockAddResult Success
     * @throws ApiError
     */
    public static availabilityBlocksAdd(data: AvailabilityBlocksAddData = {}): CancelablePromise<AvailabilityBlocksAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/availabilityBlocks/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update availability blocks
     * > This feature is being actively developed, features and behavior of this operation might change on short notice.
     * Updates information about the specified [Availability block](https://mews-systems.gitbook.io/connector-api/operations/#availability-block).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AvailabilityBlockAddResult Success
     * @throws ApiError
     */
    public static availabilityBlocksUpdate(data: AvailabilityBlocksUpdateData = {}): CancelablePromise<AvailabilityBlocksUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/availabilityBlocks/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class BillsService {
    /**
     * Get all bills
     * Returns all bills, optionally filtered by customers, identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsGetAll(data: BillsGetAllData = {}): CancelablePromise<BillsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsGetAllByIds(data: BillsGetAllByIdsData = {}): CancelablePromise<BillsGetAllByIdsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/getAllByIds',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsGetAllByCustomers(data: BillsGetAllByCustomersData = {}): CancelablePromise<BillsGetAllByCustomersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/getAllByCustomers',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsGetAllClosed(data: BillsGetAllClosedData = {}): CancelablePromise<BillsGetAllClosedResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/getAllClosed',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get bill PDF
     * Creates a PDF version of the specified bill. In case it's not possible to return PDF immediately, you must retry the call later while providing the unique event identifier that is returned from the first invocation.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsGetPdf(data: BillsGetPdfData = {}): CancelablePromise<BillsGetPdfResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/getPdf',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add bill
     * Creates new empty bill assigned to specified account. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsAdd(data: BillsAddData = {}): CancelablePromise<BillsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete bill
     * Removes selected bills. Bill must be empty, otherwise it's not possible to delete it. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static billsDelete(data: BillsDeleteData = {}): CancelablePromise<BillsDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Close bill
     * Closes a bill so no further modification to it is possible. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BillResult Success
     * @throws ApiError
     */
    public static billsClose(data: BillsCloseData = {}): CancelablePromise<BillsCloseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/bills/close',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class BusinessSegmentsService {
    /**
     * Get all business segments
     * Returns all business segments of the default service provided by the enterprise.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns BusinessSegmentResult Success
     * @throws ApiError
     */
    public static businessSegmentsGetAll(data: BusinessSegmentsGetAllData = {}): CancelablePromise<BusinessSegmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/businessSegments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CancellationPoliciesService {
    /**
     * Get all cancellation policies
     * > ### Restricted!
     * > This operation is currently in beta-test and as such it is subject to change.
     * Returns all cancellation policies, filtered by services, rate groups and other filters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CancellationPolicyResult Success
     * @throws ApiError
     */
    public static cancellationPoliciesGetAll(data: CancellationPoliciesGetAllData = {}): CancelablePromise<CancellationPoliciesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/cancellationPolicies/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CashierTransactionsService {
    /**
     * Get all cashier transactions
     * Returns all cashier transactions created within the specified interval.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CashierTransactionResult Success
     * @throws ApiError
     */
    public static cashierTransactionsGetAll(data: CashierTransactionsGetAllData = {}): CancelablePromise<CashierTransactionsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/cashierTransactions/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CashiersService {
    /**
     * Get all cashiers
     * Returns all cashiers in the enterprise.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CashierResult Success
     * @throws ApiError
     */
    public static cashiersGetAll(data: CashiersGetAllData = {}): CancelablePromise<CashiersGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/cashiers/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CommandsService {
    /**
     * Get all commands by ids
     * Returns all commands by their identifiers.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DeviceCommandResult Success
     * @throws ApiError
     */
    public static commandsGetAllByIds(data: CommandsGetAllByIdsData = {}): CancelablePromise<CommandsGetAllByIdsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/commands/getAllByIds',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all commands
     * Returns all commands the are still active from the client application point of view. That means commands that are in either `Pending` or `Received` state.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DeviceCommandResult Success
     * @throws ApiError
     */
    public static commandsGetAllActive(data: CommandsGetAllActiveData = {}): CancelablePromise<CommandsGetAllActiveResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/commands/getAllActive',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add printer command
     * Adds a new printer command representing printing of the specified document on a printer. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DeviceCommandAddResult Success
     * @throws ApiError
     */
    public static commandsAddPrinter(data: CommandsAddPrinterData = {}): CancelablePromise<CommandsAddPrinterResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/commands/addPrinter',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add key cutter command
     * Adds a new key cutter command representing cutting of a key for the specified reservation. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DeviceCommandAddResult Success
     * @throws ApiError
     */
    public static commandsAddKeyCutter(data: CommandsAddKeyCutterData = {}): CancelablePromise<CommandsAddKeyCutterResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/commands/addKeyCutter',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add payment command
     * > ### Restricted!
     * > This operation is part of a custom workflow for Mews partners such as POS systems to access Mews Payment Terminals.
     * > See [Mews Payment Terminals](https://mews-systems.gitbook.io/connector-api/use-cases/mews-terminals/).
     * Adds a new Mews Payment Terminal command for taking a customer payment.
     * The operation instructs a specified terminal device to take a payment from a specified customer for a specified amount.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DeviceCommandAddResult Success
     * @throws ApiError
     */
    public static commandsAddPaymentTerminal(data: CommandsAddPaymentTerminalData = {}): CancelablePromise<CommandsAddPaymentTerminalResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/commands/addPaymentTerminal',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update command
     * Updates state of a command.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static commandsUpdate(data: CommandsUpdateData = {}): CancelablePromise<CommandsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/commands/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CompaniesService {
    /**
     * Add company
     * Adds a new company. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CompanyResult Success
     * @throws ApiError
     */
    public static companiesAdd(data: CompaniesAddData = {}): CancelablePromise<CompaniesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companies/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update company
     * Updates information of the company. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CompanyResult Success
     * @throws ApiError
     */
    public static companiesUpdate(data: CompaniesUpdateData = {}): CancelablePromise<CompaniesUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companies/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all companies
     * Returns all company profiles of the enterprise, possibly filtered by identifiers, names or other filters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CompanyResult Success
     * @throws ApiError
     */
    public static companiesGetAll(data: CompaniesGetAllData = {}): CancelablePromise<CompaniesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companies/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete companies
     * Deletes specified companies.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static companiesDelete(data: CompaniesDeleteData = {}): CancelablePromise<CompaniesDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companies/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CompanyResult Success
     * @throws ApiError
     */
    public static companiesGetAllByName(data: CompaniesGetAllByNameData = {}): CancelablePromise<CompaniesGetAllByNameResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companies/getAllByName',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CompanionshipsService {
    /**
     * Get all companionships
     * Returns all companionships based on customers, reservations or reservation groups. One of them must be specified in the request.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CompanionshipResult Success
     * @throws ApiError
     */
    public static companionshipsGetAll(data: CompanionshipsGetAllData = {}): CancelablePromise<CompanionshipsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companionships/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CompanyContractsService {
    /**
     * Get all company contracts
     * Returns all contracts between the enterprise and other companies.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ContractResult Success
     * @throws ApiError
     */
    public static companyContractsGetAll(data: CompanyContractsGetAllData = {}): CancelablePromise<CompanyContractsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companyContracts/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add company contracts
     * Adds one or more company contracts.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ContractResult Success
     * @throws ApiError
     */
    public static companyContractsAdd(data: CompanyContractsAddData = {}): CancelablePromise<CompanyContractsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companyContracts/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update company contracts
     * Updates one or more company contracts.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ContractResult Success
     * @throws ApiError
     */
    public static companyContractsUpdate(data: CompanyContractsUpdateData = {}): CancelablePromise<CompanyContractsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companyContracts/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete company contracts
     * Deletes one or more company contracts.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static companyContractsDelete(data: CompanyContractsDeleteData = {}): CancelablePromise<CompanyContractsDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/companyContracts/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ConfigurationsService {
    /**
     * Get configuration
     * Returns the enterprise configuration. For single-enterprise Access Tokens, this is the enterprise associated with the token. For [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/), use the `EnterpriseId` parameter to specify which enterprise you want the configuration for. In the case of service scoped integrations, the operation returns the configuration associated with both the enterprise and the bookable service linked to the token.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Configuration Success
     * @throws ApiError
     */
    public static configurationGet(data: ConfigurationGetData = {}): CancelablePromise<ConfigurationGetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/configuration/get',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CountersService {
    /**
     * Get all counters
     * Returns all counters of an enterprise associated with the connector integration.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CounterResult Success
     * @throws ApiError
     */
    public static countersGetAll(data: CountersGetAllData = {}): CancelablePromise<CountersGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/counters/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CountriesService {
    /**
     * Get all countries
     * Returns all countries supported by the API.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CountryResult Success
     * @throws ApiError
     */
    public static countriesGetAll(data: CountriesGetAllData = {}): CancelablePromise<CountriesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/countries/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CreditCardsService {
    /**
     * Get all credit cards
     * Returns all credit cards, possibly filtered by identifiers, [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or other filters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreditCardResult Success
     * @throws ApiError
     */
    public static creditCardsGetAll(data: CreditCardsGetAllData = {}): CancelablePromise<CreditCardsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/creditCards/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreditCardResult Success
     * @throws ApiError
     */
    public static creditCardsGetAllByIds(data: CreditCardsGetAllByIdsData = {}): CancelablePromise<CreditCardsGetAllByIdsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/creditCards/getAllByIds',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CreditCardResult Success
     * @throws ApiError
     */
    public static creditCardsGetAllByCustomers(data: CreditCardsGetAllByCustomersData = {}): CancelablePromise<CreditCardsGetAllByCustomersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/creditCards/getAllByCustomers',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add tokenized credit card
     * Adds a new tokenized credit card to the specified customer. To be able to use this operation special permission has to be granted during certification.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddCreditCardResult Success
     * @throws ApiError
     */
    public static creditCardsAddTokenized(data: CreditCardsAddTokenizedData = {}): CancelablePromise<CreditCardsAddTokenizedResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/creditCards/addTokenized',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Charge credit card
     * Creates payment for specified customer credit card and charges the credit card via a gateway. Note that the kind of the card has to be `Gateway`.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ChargeCreditCardResult Success
     * @throws ApiError
     */
    public static creditCardsCharge(data: CreditCardsChargeData = {}): CancelablePromise<CreditCardsChargeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/creditCards/charge',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CulturesService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CultureResult Success
     * @throws ApiError
     */
    public static culturesGetAll(data: CulturesGetAllData = {}): CancelablePromise<CulturesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/cultures/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CurrenciesService {
    /**
     * Get all currencies
     * Returns all currencies supported by the API.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CurrencyResult Success
     * @throws ApiError
     */
    public static currenciesGetAll(data: CurrenciesGetAllData = {}): CancelablePromise<CurrenciesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/currencies/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class CustomersService {
    /**
     * Get all customers
     * Returns all customers filtered by identifiers, emails, names and other filters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CustomerResult Success
     * @throws ApiError
     */
    public static customersGetAll(data: CustomersGetAllData = {}): CancelablePromise<CustomersGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CustomerResult Success
     * @throws ApiError
     */
    public static customersGetAllByIds(data: CustomersGetAllByIdsData = {}): CancelablePromise<CustomersGetAllByIdsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/getAllByIds',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CustomerResult Success
     * @throws ApiError
     */
    public static customersGetAllByEmails(data: CustomersGetAllByEmailsData = {}): CancelablePromise<CustomersGetAllByEmailsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/getAllByEmails',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Search customers
     * Searches for customers that are active at the moment in the enterprise (e.g. companions of checked-in reservations or paymasters).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CustomerSearchResult Success
     * @throws ApiError
     */
    public static customersSearch(data: CustomersSearchData = {}): CancelablePromise<CustomersSearchResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/search',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CustomerResult Success
     * @throws ApiError
     */
    public static customersGetAllByName(data: CustomersGetAllByNameData = {}): CancelablePromise<CustomersGetAllByNameResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/getAllByName',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * Get customers open items
     * Use payments/getAll and orderItems/getAll
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CustomerItemResult Success
     * @throws ApiError
     */
    public static customersGetOpenItems(data: CustomersGetOpenItemsData = {}): CancelablePromise<CustomersGetOpenItemsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/getOpenItems',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add customer
     * Adds a new customer to the system and returns details of the added customer. If a customer with the specified email already exists, and `OverwriteExisting` is set to `true`, then the existing customer profile information is overwritten and the existing customer data returned. If `OverwriteExisting` is set to `false`, an error response is returned. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Customer Success
     * @throws ApiError
     */
    public static customersAdd(data: CustomersAddData = {}): CancelablePromise<CustomersAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update customer
     * Updates personal information of a customer. Note that if any of the fields is left blank, it won't clear the field in Mews. The field will be left intact. In case of email update, the email will change in Mews only if there is no other customer profile in the hotel with such email. Otherwise an error response is returned. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Customer Success
     * @throws ApiError
     */
    public static customersUpdate(data: CustomersUpdateData = {}): CancelablePromise<CustomersUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * Merge customers
     * Use accounts/merge instead.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static customersMerge(data: CustomersMergeData = {}): CancelablePromise<CustomersMergeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/merge',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add customer file
     * Attaches the specified file to the customer profile. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddAccountFileResult Success
     * @throws ApiError
     */
    public static customersAddFile(data: CustomersAddFileData = {}): CancelablePromise<CustomersAddFileResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/addFile',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class DepartmentsService {
    /**
     * Get all departments
     * Returns all departments of an enterprise associated with the connector integration.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DepartmentResult Success
     * @throws ApiError
     */
    public static departmentsGetAll(data: DepartmentsGetAllData = {}): CancelablePromise<DepartmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/departments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class DevicesService {
    /**
     * Get all devices
     * Returns all devices in the enterprise.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns DeviceResult Success
     * @throws ApiError
     */
    public static devicesGetAll(data: DevicesGetAllData = {}): CancelablePromise<DevicesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/devices/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class EnterprisesService {
    /**
     * Get all enterprises
     * Returns all enterprises within scope of the `Access Token`, optionally filtered by enterprise identifiers and external identifiers. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns EnterpriseResult Success
     * @throws ApiError
     */
    public static enterprisesGetAll(data: EnterprisesGetAllData = {}): CancelablePromise<EnterprisesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/enterprises/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ExchangeRatesService {
    /**
     * Get all exchange rates
     * Returns all available exchange rates among currencies of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ExchangeRateResult Success
     * @throws ApiError
     */
    public static exchangeRatesGetAll(data: ExchangeRatesGetAllData = {}): CancelablePromise<ExchangeRatesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/exchangeRates/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ExportsService {
    /**
     * Add export
     * Create a pending export. Export all entities of the specified `EntityType` within the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/) but doesn't have filtering by `EnterpriseIds` or `ChainIds`, so will return entities from all enterprises within the scope of the portfolio.
     * If there is already an export with status `Pending` or `Processing` for the specified entity type, the request for a new export will be rejected. Successful exports remain available for download until the expiration date specified in `ExpiresUtc`.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ExportAddResult Success
     * @throws ApiError
     */
    public static exportsAdd(data: ExportsAddData = {}): CancelablePromise<ExportsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/exports/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all exports
     * Get exports for the given `ExportIds`. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ExportResult Success
     * @throws ApiError
     */
    public static exportsGetAll(data: ExportsGetAllData = {}): CancelablePromise<ExportsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/exports/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ImagesService {
    /**
     * Get image URLs
     * Returns URLs of the specified images.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ImageUrlResult Success
     * @throws ApiError
     */
    public static imagesGetUrls(data: ImagesGetUrlsData = {}): CancelablePromise<ImagesGetUrlsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/images/getUrls',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class LanguagesService {
    /**
     * Get all languages
     * Returns all languages supported by the API.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LanguageResult Success
     * @throws ApiError
     */
    public static languagesGetAll(data: LanguagesGetAllData = {}): CancelablePromise<LanguagesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/languages/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get language texts
     * Returns translations of texts in the specified languages.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LanguageTextResult Success
     * @throws ApiError
     */
    public static languagesGetTexts(data: LanguagesGetTextsData = {}): CancelablePromise<LanguagesGetTextsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/languages/getTexts',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class LoyaltyMembershipsService {
    /**
     * Get all loyalty memberships
     * Returns all loyalty memberships of the enterprise (in the given activity states), optionally filtered by specific loyalty membership identifiers or other filter parameters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyMembershipResult Success
     * @throws ApiError
     */
    public static loyaltyMembershipsGetAll(data: LoyaltyMembershipsGetAllData = {}): CancelablePromise<LoyaltyMembershipsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyMemberships/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add loyalty memberships
     * Adds loyalty memberships to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyMembershipResult Success
     * @throws ApiError
     */
    public static loyaltyMembershipsAdd(data: LoyaltyMembershipsAddData = {}): CancelablePromise<LoyaltyMembershipsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyMemberships/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update loyalty memberships
     * Updates information about the specified loyalty memberships. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyMembershipResult Success
     * @throws ApiError
     */
    public static loyaltyMembershipsUpdate(data: LoyaltyMembershipsUpdateData = {}): CancelablePromise<LoyaltyMembershipsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyMemberships/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete loyalty memberships
     * Deletes loyalty memberships.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static loyaltyMembershipsDelete(data: LoyaltyMembershipsDeleteData = {}): CancelablePromise<LoyaltyMembershipsDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyMemberships/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class LoyaltyProgramsService {
    /**
     * Get all loyalty programs
     * Returns all loyalty programs of the enterprise (in the given activity state), optionally filtered by specific loyalty program identifiers or other filter parameters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyProgramResult Success
     * @throws ApiError
     */
    public static loyaltyProgramsGetAll(data: LoyaltyProgramsGetAllData = {}): CancelablePromise<LoyaltyProgramsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyPrograms/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add loyalty programs
     * Adds loyalty programs to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyProgramResult Success
     * @throws ApiError
     */
    public static loyaltyProgramsAdd(data: LoyaltyProgramsAddData = {}): CancelablePromise<LoyaltyProgramsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyPrograms/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update loyalty programs
     * Updates information about the specified loyalty programs. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyProgramResult Success
     * @throws ApiError
     */
    public static loyaltyProgramsUpdate(data: LoyaltyProgramsUpdateData = {}): CancelablePromise<LoyaltyProgramsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyPrograms/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete loyalty programs
     * Deletes loyalty programs. Note that a loyalty program containing active memberships cannot be deleted.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static loyaltyProgramsDelete(data: LoyaltyProgramsDeleteData = {}): CancelablePromise<LoyaltyProgramsDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyPrograms/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class LoyaltyTiersService {
    /**
     * Get all loyalty tiers
     * Returns all loyalty tiers of the chain (in the given activity state), filtered by loyalty program identifiers and optionally filtered by specific loyalty tier identifiers or other filter parameters.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyTierResult Success
     * @throws ApiError
     */
    public static loyaltyTiersGetAll(data: LoyaltyTiersGetAllData = {}): CancelablePromise<LoyaltyTiersGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyTiers/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add loyalty tiers
     * Adds loyalty tiers to a loyalty program of the enterprise chain. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyTierResult Success
     * @throws ApiError
     */
    public static loyaltyTiersAdd(data: LoyaltyTiersAddData = {}): CancelablePromise<LoyaltyTiersAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyTiers/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update loyalty tiers
     * Updates information about the specified loyalty tiers.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns LoyaltyTierResult Success
     * @throws ApiError
     */
    public static loyaltyTiersUpdate(data: LoyaltyTiersUpdateData = {}): CancelablePromise<LoyaltyTiersUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyTiers/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete loyalty tiers
     * Deletes loyalty tiers.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static loyaltyTiersDelete(data: LoyaltyTiersDeleteData = {}): CancelablePromise<LoyaltyTiersDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/loyaltyTiers/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class MessageThreadsService {
    /**
     * Get all message threads
     * Get all message threads that you have created, filtered by time interval and/or specific message thread IDs. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns MessageThreadResult Success
     * @throws ApiError
     */
    public static messageThreadsGetAll(data: MessageThreadsGetAllData = {}): CancelablePromise<MessageThreadsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/messageThreads/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add message thread
     * Creates a new [Message thread](https://mews-systems.gitbook.io/connector-api/operations/#message-thread) on behalf of the specified customer, i.e. the sender of the original message in the message thread.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns MessageThreadResult Success
     * @throws ApiError
     */
    public static messageThreadsAdd(data: MessageThreadsAddData = {}): CancelablePromise<MessageThreadsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/messageThreads/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class MessagesService {
    /**
     * Get all messages
     * Get all messages belonging to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread). Messages can only be returned for message threads you have created. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns MessageResult Success
     * @throws ApiError
     */
    public static messagesGetAll(data: MessagesGetAllData = {}): CancelablePromise<MessagesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/messages/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add messages
     * Add the specified messages to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread). You can only add messages to message threads that you have created.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddedMessageResult Success
     * @throws ApiError
     */
    public static messagesAdd(data: MessagesAddData = {}): CancelablePromise<MessagesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/messages/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class OrderItemsService {
    /**
     * Get all order items
     * Returns all order items. At least one of the `OrderItemIds`, `ServiceOrderIds`, `ServiceIds` `BillIds`, `CreatedUtc`, `UpdatedUtc`, `ChargedUtc`, `ClosedUtc` filters must be specified in the request. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns OrderItemResult Success
     * @throws ApiError
     */
    public static orderItemsGetAll(data: OrderItemsGetAllData = {}): CancelablePromise<OrderItemsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/orderItems/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class OutletBillsService {
    /**
     * Add outlet bills
     * Adds new outlet bills with their items.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddOutletBillsResult Success
     * @throws ApiError
     */
    public static outletBillsAdd(data: OutletBillsAddData = {}): CancelablePromise<OutletBillsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/outletBills/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class OutletItemsService {
    /**
     * Get all outlet items
     * Returns all outlet items of the enterprise that were consumed (posted) or will be consumed within the specified interval. If the `Currency` is specified, costs of the items are converted to that currency.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns OutletItemResult Success
     * @throws ApiError
     */
    public static outletItemsGetAll(data: OutletItemsGetAllData = {}): CancelablePromise<OutletItemsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/outletItems/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class OutletsService {
    /**
     * Get all outlets
     * Returns all outlets of an enterprise associated with the connector integration.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns OutletResult Success
     * @throws ApiError
     */
    public static outletsGetAll(data: OutletsGetAllData = {}): CancelablePromise<OutletsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/outlets/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class PaymentRequestsService {
    /**
     * Get all payment requests
     * Get all payment requests belonging to the specified customer accounts.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PaymentRequestResult Success
     * @throws ApiError
     */
    public static paymentRequestsGetAll(data: PaymentRequestsGetAllData = {}): CancelablePromise<PaymentRequestsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/paymentRequests/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add payment requests
     * Creates a payment request to the specified [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PaymentRequestResult Success
     * @throws ApiError
     */
    public static paymentRequestsAdd(data: PaymentRequestsAddData = {}): CancelablePromise<PaymentRequestsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/paymentRequests/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Cancel payment requests
     * Cancels specified payment requests. Only payment requests which are in `Pending` state can be canceled.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PaymentRequestResult Success
     * @throws ApiError
     */
    public static paymentRequestsCancel(data: PaymentRequestsCancelData = {}): CancelablePromise<PaymentRequestsCancelResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/paymentRequests/cancel',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class PaymentsService {
    /**
     * Get all payments
     * Returns all payments in the system, filtered by various parameters. At least one filter parameter must be specified. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PaymentResult Success
     * @throws ApiError
     */
    public static paymentsGetAll(data: PaymentsGetAllData = {}): CancelablePromise<PaymentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/payments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Refund payment
     * Refunds a specified payment. Note only credit card or alternative payments can be refunded. The refund is itself a payment, so to get more information about the refund, use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/#get-all-payments) with the identifier from `RefundId`. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PaymentRefundResult Success
     * @throws ApiError
     */
    public static paymentsRefund(data: PaymentsRefundData = {}): CancelablePromise<PaymentsRefundResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/payments/refund',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add credit card payment
     * Adds a new credit card payment to a bill of the specified customer. Note that the payment is added to open bill of the customer, either to the specified one or the default one. This operation only serves to record a credit card payment that has already been taken outside of Mews or Mews' payment terminal, and does not actually charge the customer's credit card.
     * The bill can then be closed manually by a Mews user, or automatically via API with the [Close bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#close-bill) operation.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddCreditCardResult Success
     * @throws ApiError
     */
    public static paymentsAddCreditCard(data: PaymentsAddCreditCardData = {}): CancelablePromise<PaymentsAddCreditCardResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/payments/addCreditCard',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add external payment
     * Adds a new external payment to a bill of the specified customer. An external payment represents a payment that is tracked outside of the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddExternalPaymentResult Success
     * @throws ApiError
     */
    public static paymentsAddExternal(data: PaymentsAddExternalData = {}): CancelablePromise<PaymentsAddExternalResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/payments/addExternal',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add alternative payment
     * Adds a new alternative payment to a specified customer.
     * **Pre-requisites:** The property must have the relevant type of alternative payment method enabled in their Mews subscriptions in order to accept such payments in their Mews environment. Please ask the property to confirm.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AlternativePaymentResult Success
     * @throws ApiError
     */
    public static paymentsAddAlternative(data: PaymentsAddAlternativeData = {}): CancelablePromise<PaymentsAddAlternativeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/payments/addAlternative',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class PreauthorizationsService {
    /**
     * Get all preauthorizations by customers
     * Returns all preauthorizations of specified customers.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PreauthorizationResult Success
     * @throws ApiError
     */
    public static preauthorizationsGetAllByCustomers(data: PreauthorizationsGetAllByCustomersData = {}): CancelablePromise<PreauthorizationsGetAllByCustomersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/preauthorizations/getAllByCustomers',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ProductCategoriesService {
    /**
     * Get all product categories
     * Returns all categories of products. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ProductCategoryResult Success
     * @throws ApiError
     */
    public static productCategoriesGetAll(data: ProductCategoriesGetAllData = {}): CancelablePromise<ProductCategoriesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/productCategories/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ProductsService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ProductPricingResult Success
     * @throws ApiError
     */
    public static productsGetPricing(data: ProductsGetPricingData = {}): CancelablePromise<ProductsGetPricingResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/products/getPricing',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all products
     * Returns all products offered together with the specified services. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ProductResult Success
     * @throws ApiError
     */
    public static productsGetAll(data: ProductsGetAllData = {}): CancelablePromise<ProductsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/products/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete products
     * Deletes specified products. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static productsDelete(data: ProductsDeleteData = {}): CancelablePromise<ProductsDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/products/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class RateGroupsService {
    /**
     * Get all rate groups
     * Returns all rate groups, filtered by unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RateGroupResult Success
     * @throws ApiError
     */
    public static rateGroupsGetAll(data: RateGroupsGetAllData = {}): CancelablePromise<RateGroupsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/rateGroups/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class RatesService {
    /**
     * Get all rates
     * Returns all rates (pricing setups) and rate groups (condition settings) of the default service provided by the enterprise.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RateResult Success
     * @throws ApiError
     */
    public static ratesGetAll(data: RatesGetAllData = {}): CancelablePromise<RatesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/rates/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add rates
     * Adds rates to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/). Rate type of `AvailabilityBlock` cannot be created via this operation.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RateAddResult Success
     * @throws ApiError
     */
    public static ratesAdd(data: RatesAddData = {}): CancelablePromise<RatesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/rates/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get rate pricing
     * Returns prices for a given rate for a specified time interval. Prices will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.
     * The price in the response is dependent on the enterprise's [pricing](https://mews-systems.gitbook.io/connector-api/operations/configuration/#pricing) setting. If the enterprise is set to a Gross pricing environment, then the price returned is the gross price (inclusive of tax). If the enterprise is set to a Net pricing environment, the price returned is the net price (excluding tax). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RatePricing Success
     * @throws ApiError
     */
    public static ratesGetPricing(data: RatesGetPricingData = {}): CancelablePromise<RatesGetPricingResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/rates/getPricing',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update rate price
     * Updates the prices for a given rate. You can make multiple price updates with one API call, and for each one specify the time interval for which the update applies, the price value and the applicable [resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category). The price will be updated for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. The price is per time unit, e.g. per day or per month. If the resource category `CategoryId` is not specified, the updated price will apply to the base price for all resource categories.
     * Note that prices are defined daily, so when the server receives the UTC interval, it first converts it to the enterprise timezone and updates the price on all dates that the interval intersects. Only root rates can be updated (the rates that have no base rate, that have `BaseRateId` set to `null`). It is not permitted to update historical prices older than specified by `EditableHistoryInterval`. Future prices may be updated up to 5 years in the future. The __maximum size of time interval__ is 100 time units or 2 years, whichever is the shorter amount of time.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static ratesUpdatePrice(data: RatesUpdatePriceData = {}): CancelablePromise<RatesUpdatePriceResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/rates/updatePrice',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ReservationGroupsService {
    /**
     * Get all reservation groups
     * Returns all reservation groups, filtered by unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationGroupResult Success
     * @throws ApiError
     */
    public static reservationGroupsGetAll(data: ReservationGroupsGetAllData = {}): CancelablePromise<ReservationGroupsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservationGroups/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ReservationsService {
    /**
     * @deprecated
     * Use the equivalent endpoint reservations/getAll/2023-06-06
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationServiceOrderResult Success
     * @throws ApiError
     */
    public static serviceOrdersReservationsGetAll(data: ServiceOrdersReservationsGetAllData = {}): CancelablePromise<ServiceOrdersReservationsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/serviceOrders/reservations/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all reservations (ver 2023-06-06)
     * Returns all reservations within scope of the Access Token, filtered according to the specified parameters. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property).
     *
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationServiceOrderResult Success
     * @throws ApiError
     */
    public static reservationsGetAll20230606(data: ReservationsGetAll20230606Data = {}): CancelablePromise<ReservationsGetAll20230606Response> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/getAll/2023-06-06',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * Get all reservations (ver 2017-04-12)
     * Use reservations/getAll/2023-06-06.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationResult Success
     * @throws ApiError
     */
    public static reservationsGetAll(data: ReservationsGetAllData = {}): CancelablePromise<ReservationsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationResult Success
     * @throws ApiError
     */
    public static reservationsGetAllByIds(data: ReservationsGetAllByIdsData = {}): CancelablePromise<ReservationsGetAllByIdsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/getAllByIds',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationResult Success
     * @throws ApiError
     */
    public static reservationsGetAllByCustomers(data: ReservationsGetAllByCustomersData = {}): CancelablePromise<ReservationsGetAllByCustomersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/getAllByCustomers',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationResult Success
     * @throws ApiError
     */
    public static reservationsGetAllByNumbers(data: ReservationsGetAllByNumbersData = {}): CancelablePromise<ReservationsGetAllByNumbersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/getAllByNumbers',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Price reservations
     * Returns prices of reservations with the specified parameters. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationPricingResult Success
     * @throws ApiError
     */
    public static reservationsPrice(data: ReservationsPriceData = {}): CancelablePromise<ReservationsPriceResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/price',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add reservations
     * Adds the specified reservations as a single group. If `GroupId` is specified, adds the reservations to an already existing group. Note that all reservations linked to an availability block must belong to the same reservation group.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationAdditionResult Success
     * @throws ApiError
     */
    public static reservationsAdd(data: ReservationsAddData = {}): CancelablePromise<ReservationsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update reservations
     * Updates information about the specified reservations. Note that if any of the fields are sent as `null`, it won't clear the field in Mews. If the `Value` within the object is sent as `null`, the field will be cleared in Mews. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationResult Success
     * @throws ApiError
     */
    public static reservationsUpdate(data: ReservationsUpdateData = {}): CancelablePromise<ReservationsUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Confirm reservation
     * Marks all specified reservations as `Confirmed`. Succeeds only if all confirmation conditions are met (the reservations have the `Optional` state).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns MultipleReservationResult Success
     * @throws ApiError
     */
    public static reservationsConfirm(data: ReservationsConfirmData = {}): CancelablePromise<ReservationsConfirmResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/confirm',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Start reservation
     * Marks a reservation as `Started` (= checked in). Succeeds only if all starting conditions are met (the reservation has the `Confirmed` state, does not have start set to future, has an inspected room assigned etc). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static reservationsStart(data: ReservationsStartData = {}): CancelablePromise<ReservationsStartResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/start',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Process reservation
     * Marks a reservation as `Processed` (= checked out). Succeeds only if all processing conditions are met (the reservation has the `Started` state, balance of all reservation members is zero etc). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * ### Conditions
     * - Reservation has already been checked in.
     * - Reservation isn't alredy in `Processed` state.
     * - Reservation can't be checked out sooner than last day of planned stay.
     * - The companion profiles of reservation are complete (details can be found in error message).
     * - If `AllowOpenBalance` set to `false`, all bills have to be closable (items on bills are either paid by current customer, or set to be paid by other customer). With `CloseBills` option set to `true` they can be automatically closed, when set to `false` they must be closed manually.
     * - If `AllowOpenBalance` set to `true`, `Notes` must be filled in.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static reservationsProcess(data: ReservationsProcessData = {}): CancelablePromise<ReservationsProcessResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/process',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Cancel reservation
     * Cancels all reservation with specified identifiers. Succeeds only if the reservations are cancellable. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns MultipleReservationResult Success
     * @throws ApiError
     */
    public static reservationsCancel(data: ReservationsCancelData = {}): CancelablePromise<ReservationsCancelResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/cancel',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update reservation customer
     * Updates customer of a reservation. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static reservationsUpdateCustomer(data: ReservationsUpdateCustomerData = {}): CancelablePromise<ReservationsUpdateCustomerResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/updateCustomer',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update reservation interval
     * Updates reservation interval (start, end or both). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static reservationsUpdateInterval(data: ReservationsUpdateIntervalData = {}): CancelablePromise<ReservationsUpdateIntervalResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/updateInterval',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add reservation companion
     * Adds a customer as a companion to the reservation. Succeeds only if there is space for the new companion (count of current companions is less than `AdultCount + ChildCount`).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddCompanionshipResult Success
     * @throws ApiError
     */
    public static reservationsAddCompanion(data: ReservationsAddCompanionData = {}): CancelablePromise<ReservationsAddCompanionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/addCompanion',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete reservation companion
     * Removes customer companionship from the reservation. Note that the customer profile stays untouched, only the relation between the customer and reservation is deleted.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static reservationsDeleteCompanion(data: ReservationsDeleteCompanionData = {}): CancelablePromise<ReservationsDeleteCompanionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/deleteCompanion',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add reservation product
     * Adds a new product order of the specified product to the reservation.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddProductItemsResult Success
     * @throws ApiError
     */
    public static reservationsAddProduct(data: ReservationsAddProductData = {}): CancelablePromise<ReservationsAddProductResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/addProduct',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * Get all reservation items
     * Use orderItems/getAll.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReservationItemResult Success
     * @throws ApiError
     */
    public static reservationsGetAllItems(data: ReservationsGetAllItemsData = {}): CancelablePromise<ReservationsGetAllItemsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/reservations/getAllItems',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ResourceAccessTokensService {
    /**
     * Get all resource access tokens
     * Returns all resource access tokens based on resource access token identifiers, reservations or interval. One of them must be specified in the request.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceAccessTokenResult Success
     * @throws ApiError
     */
    public static resourceAccessTokensGetAll(data: ResourceAccessTokensGetAllData = {}): CancelablePromise<ResourceAccessTokensGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceAccessTokens/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add resource access tokens
     * Adds new resource access tokens with the specified data.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceAccessTokenResult Success
     * @throws ApiError
     */
    public static resourceAccessTokensAdd(data: ResourceAccessTokensAddData = {}): CancelablePromise<ResourceAccessTokensAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceAccessTokens/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update resource access tokens
     * Updates the [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token) validity interval and [permissions](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-permission-parameter) that it grants.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceAccessTokenResult Success
     * @throws ApiError
     */
    public static resourceAccessTokensUpdate(data: ResourceAccessTokensUpdateData = {}): CancelablePromise<ResourceAccessTokensUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceAccessTokens/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete resource access tokens
     * Delete specified resource access tokens.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static resourceAccessTokensDelete(data: ResourceAccessTokensDeleteData = {}): CancelablePromise<ResourceAccessTokensDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceAccessTokens/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ResourceBlocksService {
    /**
     * Get all resource blocks
     * Returns all resource blocks (out of order blocks or internal use blocks).
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceBlockResult Success
     * @throws ApiError
     */
    public static resourceBlocksGetAll(data: ResourceBlocksGetAllData = {}): CancelablePromise<ResourceBlocksGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceBlocks/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add resource block
     * Adds a new resource block to the specified resource for a defined period of time.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceBlockResult Success
     * @throws ApiError
     */
    public static resourceBlocksAdd(data: ResourceBlocksAddData = {}): CancelablePromise<ResourceBlocksAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceBlocks/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete resource blocks
     * Removes specified resource blocks from the resources.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static resourceBlocksDelete(data: ResourceBlocksDeleteData = {}): CancelablePromise<ResourceBlocksDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceBlocks/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ResourceCategoriesService {
    /**
     * Get all resource categories
     * Returns all categories of resources. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceCategoryResult Success
     * @throws ApiError
     */
    public static resourceCategoriesGetAll(data: ResourceCategoriesGetAllData = {}): CancelablePromise<ResourceCategoriesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceCategories/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all resource category assignments
     * Returns all resource category assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceCategoryAssignmentResult Success
     * @throws ApiError
     */
    public static resourceCategoryAssignmentsGetAll(data: ResourceCategoryAssignmentsGetAllData = {}): CancelablePromise<ResourceCategoryAssignmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceCategoryAssignments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all resource category image assignments
     * Returns all resource category image assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceCategoryImageAssignmentResult Success
     * @throws ApiError
     */
    public static resourceCategoryImageAssignmentsGetAll(data: ResourceCategoryImageAssignmentsGetAllData = {}): CancelablePromise<ResourceCategoryImageAssignmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceCategoryImageAssignments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ResourceFeatureAssignmentsService {
    /**
     * Get all resource feature assignments
     * Returns all resource feature assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceFeatureAssignmentResult Success
     * @throws ApiError
     */
    public static resourceFeatureAssignmentsGetAll(data: ResourceFeatureAssignmentsGetAllData = {}): CancelablePromise<ResourceFeatureAssignmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceFeatureAssignments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ResourceFeaturesService {
    /**
     * Get all resource features
     * Returns all resource features. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceFeatureResult Success
     * @throws ApiError
     */
    public static resourceFeaturesGetAll(data: ResourceFeaturesGetAllData = {}): CancelablePromise<ResourceFeaturesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resourceFeatures/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ResourcesService {
    /**
     * Get all resources
     * Returns all resources of an enterprise associated with the connector integration. Note that when any of the extents is set to `true`, the response contains the entities that are associated to a resource. If the extent is not associated to a resource (e.g. resource category not assigned to any resource), this information is not returned.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ResourceResult Success
     * @throws ApiError
     */
    public static resourcesGetAll(data: ResourcesGetAllData = {}): CancelablePromise<ResourcesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resources/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update resources
     * Updates details of the resources.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static resourcesUpdate(data: ResourcesUpdateData = {}): CancelablePromise<ResourcesUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/resources/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class RestrictionsService {
    /**
     * Add restrictions
     * Adds new restrictions with the specified conditions. Note care is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization/#datetimes).
     * > **Important:** If consecutive restrictions are sent with the exact same conditions and exceptions, no attempt at merging them into a single restriction is made. This means that there can be a large number of restrictions per service, leading to sub-optimal performance. A quota limit of 150000 has been introduced for this reason. To mitigate the issue, the preferred way to add restrictions is new operation [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#set-restrictions). The new operation is currently marked as 'Restricted' and subject to change as part of beta testing, but in time we expect that to replace [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/#add-restrictions).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RestrictionAdditionResult Success
     * @throws ApiError
     */
    public static restrictionsAdd(data: RestrictionsAddData = {}): CancelablePromise<RestrictionsAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/restrictions/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete restrictions
     * Removes restrictions from the service.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static restrictionsDelete(data: RestrictionsDeleteData = {}): CancelablePromise<RestrictionsDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/restrictions/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Set restrictions
     * > ### Restricted!
     * > This operation is currently in beta-test and as such it is subject to change. Use of this operation must be enabled per enterprise. Please contact the Technical Partner Support team in order to enable it.
     * Adds new restrictions with the specified conditions. For improved efficiency, multiple similar restrictions will be merged into a single restriction - see [Merging algorithm](https://mews-systems.gitbook.io/connector-api/operations/#merging-algorithm). A quota of 150000 restrictions per service applies, although it is unlikely to be exceeded because of the [Merging algorithm](https://mews-systems.gitbook.io/connector-api/operations/#merging-algorithm).
     * Note care is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization/#datetimes). The validation of these properties is stronger in this operation than for [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/#add-restrictions).
     * ### Merging algorithm
     * If a restriction already exists with the same conditions, or if multiple supplied restrictions match in all properties but differ in time interval and follow each other chronologically, a merging algorithm is applied to combine them.
     * This reduces the overall number of restrictions and improves system performance. The merging algorithm is as follows:
     * - A. If the exceptions of the new restriction match the old restriction:
     * 1) If the new interval is longer than the old one, a new restriction is created joining the two intervals.
     * 2) If the new interval is shorter, no changes are made.
     * - B. If the exceptions of the new restriction do _not_ match the old restriction:
     * 1) If the new interval overlaps the old interval, the old restriction will be spliced before and after the new interval. Restrictions matching the old restriction are then added at the appropriate interval along with the new restriction.
     * 2) If the new interval does _not_ overlap the old interval, the new restriction is added as usual.
     * ### Affected restrictions
     * Only restrictions created through the API are affected by this operation, _not_ restrictions created by the user within **Mews Operations**. Similarly, if a user creates a restriction in **Mews Operations**, this will _not_ affect restrictions created through the API.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static restrictionsSet(data: RestrictionsSetData = {}): CancelablePromise<RestrictionsSetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/restrictions/set',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Clear restrictions
     * > ### Restricted!
     * > This operation is currently in beta-test and as such it is subject to change. Use of this operation must be enabled per enterprise. Please contact the Technical Partner Support team in order to enable it.
     * Deletes restrictions that [match the conditions](https://mews-systems.gitbook.io/connector-api/operations/#matching-conditions) using the [splicing algorithm](https://mews-systems.gitbook.io/connector-api/operations/#splicing-algorithm). This operation is intended to be used alongside [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#set-restrictions).
     * The specified conditions must be met exactly - see [Matching conditions](https://mews-systems.gitbook.io/connector-api/operations/#matching-conditions) below. The time interval, however, does not need to correspond with an existing restriction in the system, instead the API uses a splicing algorithm to work out how to divide up any existing restrictions to meet the specified time interval - see [Time interval splicing](https://mews-systems.gitbook.io/connector-api/operations/#time-interval-splicing).
     * ### Matching conditions
     * The specified conditions must be met exactly. For example:
     * A bookable service has two restrictions A and B. Restriction A applies to resource category C1 and rate R1. Restriction B applies to resource category C1 and to all rates.
     * If the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation is called, specifying a restriction condition of resource category C1 but with no rate specified (this defaults to all rates), then only Restriction B is cleared, not Restriction A.
     * ### Time interval splicing
     * The time interval does not need to correspond to an existing restriction in the system, instead the API uses a splicing algorithm to work out how to divide up any existing restrictions to meet the specified time interval. For example:
     * An existing restriction in the system applies from 5th January to 25th January. As usual, time intervals are inclusive, meaning that the time interval includes both the 5th January and the 25th January.
     * If the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation is called, specifying a restriction time interval of 10th January to 20th January, i.e. within the original restriction A, then the time interval of restriction A is split into three separate intervals.
     * The original restriction A is deleted, and in its place new restriction B is created for the period of time from 5th January to 9th January inclusive, and new restriction C is created for the period of time from 21st January to 25th January. Thus the period 10th January to 20th January has been cleared, but without affecting other time periods.
     * ### Affected restrictions
     * To avoid deleting user defined restrictions, the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation only affects restrictions created through the [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation or the [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/#clear-restrictions) operation.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static restrictionsClear(data: RestrictionsClearData = {}): CancelablePromise<RestrictionsClearResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/restrictions/clear',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all restrictions
     * Returns all restrictions of the default service provided by the enterprise.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RestrictionResult Success
     * @throws ApiError
     */
    public static restrictionsGetAll(data: RestrictionsGetAllData = {}): CancelablePromise<RestrictionsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/restrictions/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class RoutingRulesService {
    /**
     * Get all routing rules
     * Returns all routing rules.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RoutingRuleResult Success
     * @throws ApiError
     */
    public static routingRulesGetAll(data: RoutingRulesGetAllData = {}): CancelablePromise<RoutingRulesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/routingRules/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add routing rules
     * Adds a new routing rules.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RoutingRuleResult Success
     * @throws ApiError
     */
    public static routingRulesAdd(data: RoutingRulesAddData = {}): CancelablePromise<RoutingRulesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/routingRules/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update routing rules
     * Updates routing rules.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RoutingRuleResult Success
     * @throws ApiError
     */
    public static routingRulesUpdate(data: RoutingRulesUpdateData = {}): CancelablePromise<RoutingRulesUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/routingRules/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete routing rules
     * Deletes routing rules.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static routingRulesDelete(data: RoutingRulesDeleteData = {}): CancelablePromise<RoutingRulesDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/routingRules/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class RulesService {
    /**
     * Get all rules
     * Returns all rules applied with the reservations.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns RuleResult Success
     * @throws ApiError
     */
    public static rulesGetAll(data: RulesGetAllData = {}): CancelablePromise<RulesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/rules/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ServiceOrderNotesService {
    /**
     * Add service order notes
     * Adds one or more notes with a provided text to a specific service order. Service orders can be reservations or product orders.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ServiceOrderNoteAdditionResult Success
     * @throws ApiError
     */
    public static serviceOrderNotesAdd(data: ServiceOrderNotesAddData = {}): CancelablePromise<ServiceOrderNotesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/serviceOrderNotes/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update service order notes
     * Updates one or more given service order notes with new text.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ServiceOrderNoteUpdateResult Success
     * @throws ApiError
     */
    public static serviceOrderNotesUpdate(data: ServiceOrderNotesUpdateData = {}): CancelablePromise<ServiceOrderNotesUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/serviceOrderNotes/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all service order notes
     * Returns all notes associated with the given service orders. Service orders can be reservations or product orders. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ServiceOrderNoteResult Success
     * @throws ApiError
     */
    public static serviceOrderNotesGetAll(data: ServiceOrderNotesGetAllData = {}): CancelablePromise<ServiceOrderNotesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/serviceOrderNotes/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete service order notes
     * Deletes service order notes.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static serviceOrderNotesDelete(data: ServiceOrderNotesDeleteData = {}): CancelablePromise<ServiceOrderNotesDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/serviceOrderNotes/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ServiceOrdersService {
    /**
     * Get all product service orders
     * Returns all product service orders orders associated with the given enterprise. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/)..
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ProductServiceOrderResult Success
     * @throws ApiError
     */
    public static productServiceOrdersGetAll(data: ProductServiceOrdersGetAllData = {}): CancelablePromise<ProductServiceOrdersGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/productServiceOrders/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * @deprecated
     * @param data The data for the request.
     * @param data.requestBody
     * @returns OrderAdditionResult Success
     * @throws ApiError
     */
    public static customersCharge(data: CustomersChargeData = {}): CancelablePromise<CustomersChargeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/customers/charge',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add order
     * Creates a new order, with the specified products and items. If the time of consumption is specified, it must be either in the future or within the Editable History Interval for the enterprise. Compared to a stay service order (i.e. a reservation), which is consumed over certain span of time, a product service order is consumed at a single point in time. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns OrderAdditionResult Success
     * @throws ApiError
     */
    public static ordersAdd(data: OrdersAddData = {}): CancelablePromise<OrdersAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/orders/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class ServicesService {
    /**
     * Get all services
     * Returns all services offered by the enterprise.
     * Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ServiceResult Success
     * @throws ApiError
     */
    public static servicesGetAll(data: ServicesGetAllData = {}): CancelablePromise<ServicesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/services/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update service availability
     * Updates the number of available resources in [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) by a certain amount (relative adjustment). Note that availabilities are defined per time unit, so when the server receives the UTC interval, it first converts it to enterprise timezone and updates the availability on all time units that the interval intersects. It's not allowed to update past availabilities outside of `EditableHistoryInterval`, future updates are allowed for up to 5 years.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static servicesUpdateAvailability(data: ServicesUpdateAvailabilityData = {}): CancelablePromise<ServicesUpdateAvailabilityResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/services/updateAvailability',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get service availability
     * Returns availability of a bookable service for a specified time interval including applied availability adjustments. Availability will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ServiceAvailabilityResult Success
     * @throws ApiError
     */
    public static servicesGetAvailability(data: ServicesGetAvailabilityData = {}): CancelablePromise<ServicesGetAvailabilityResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/services/getAvailability',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get service availability (ver 2024-01-22)
     * > ### Restricted!
     * > This operation is currently in beta-test and as such it is subject to change.
     * Returns selected availability and occupancy metrics of a bookable service for a specified time interval, similar to [the availability & occupancy report](https://help.mews.com/s/article/Availability-Occupancy-report). Availability will be returned for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one time unit for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two time units for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond to the start boundary of a [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service's [time unit](https://mews-systems.gitbook.io/connector-api/operations/#time-unit): 367 hours if hours, 367 days if days, or 24 months if months.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ServiceAvailabilityResultV20240122 Success
     * @throws ApiError
     */
    public static servicesGetAvailability20240122(data: ServicesGetAvailability20240122Data = {}): CancelablePromise<ServicesGetAvailability20240122Response> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/services/getAvailability/2024-01-22',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class SourceAssignmentsService {
    /**
     * Get all source assignments
     * Returns all [Sources](https://mews-systems.gitbook.io/connector-api/operations/sources/#source) assigned to a [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group). Each reservation group can have multiple sources. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns SourceAssignmentResult Success
     * @throws ApiError
     */
    public static sourceAssignmentsGetAll(data: SourceAssignmentsGetAllData = {}): CancelablePromise<SourceAssignmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/sourceAssignments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class SourcesService {
    /**
     * Get all sources
     * Returns all sources from which reservations can originate. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns SourceResult Success
     * @throws ApiError
     */
    public static sourcesGetAll(data: SourcesGetAllData = {}): CancelablePromise<SourcesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/sources/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class TasksService {
    /**
     * Get all tasks
     * Returns all tasks of the enterprise, filtered by identifiers or other filters.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns TaskResult Success
     * @throws ApiError
     */
    public static tasksGetAll(data: TasksGetAllData = {}): CancelablePromise<TasksGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/tasks/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add task
     * Adds a new task to the enterprise, optionally to a specified department.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AddTaskResult Success
     * @throws ApiError
     */
    public static tasksAdd(data: TasksAddData = {}): CancelablePromise<TasksAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/tasks/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class TaxesService {
    /**
     * Get all tax environments
     * Returns all tax environments supported by the API.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns TaxEnvironmentResult Success
     * @throws ApiError
     */
    public static taxEnvironmentsGetAll(data: TaxEnvironmentsGetAllData = {}): CancelablePromise<TaxEnvironmentsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/taxEnvironments/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all taxations
     * Returns all taxations supported in tax environments.
     * @param data The data for the request.
     * @param data.requestBody
     * @returns TaxationResult Success
     * @throws ApiError
     */
    public static taxationsGetAll(data: TaxationsGetAllData = {}): CancelablePromise<TaxationsGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/taxations/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class VoucherCodesService {
    /**
     * Add voucher codes
     * Adds voucher codes to the specified [Vouchers](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns VoucherCodeResult Success
     * @throws ApiError
     */
    public static voucherCodesAdd(data: VoucherCodesAddData = {}): CancelablePromise<VoucherCodesAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/voucherCodes/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete voucher codes
     * Delete specified voucher codes. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static voucherCodesDelete(data: VoucherCodesDeleteData = {}): CancelablePromise<VoucherCodesDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/voucherCodes/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Get all voucher codes
     * Returns all voucher codes filtered by [Voucher](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher) or other filter parameters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns VoucherCodeResult Success
     * @throws ApiError
     */
    public static voucherCodesGetAll(data: VoucherCodesGetAllData = {}): CancelablePromise<VoucherCodesGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/voucherCodes/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}

export class VouchersService {
    /**
     * Get all vouchers
     * Returns all rate vouchers filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service), voucher code or voucher identifier. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns VoucherResult Success
     * @throws ApiError
     */
    public static vouchersGetAll(data: VouchersGetAllData = {}): CancelablePromise<VouchersGetAllResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/vouchers/getAll',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Add vouchers
     * Adds the specified vouchers to the specified [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns VoucherWriteResult Success
     * @throws ApiError
     */
    public static vouchersAdd(data: VouchersAddData = {}): CancelablePromise<VouchersAddResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/vouchers/add',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Update vouchers
     * Updates information about the specified vouchers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns VoucherWriteResult Success
     * @throws ApiError
     */
    public static vouchersUpdate(data: VouchersUpdateData = {}): CancelablePromise<VouchersUpdateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/vouchers/update',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
    /**
     * Delete vouchers
     * Delete specified vouchers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property/).
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Unit Success
     * @throws ApiError
     */
    public static vouchersDelete(data: VouchersDeleteData = {}): CancelablePromise<VouchersDeleteResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/connector/v1/vouchers/delete',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).',
                401: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.',
                403: 'Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.',
                408: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)',
                429: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).',
                500: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
            }
        });
    }
    
}